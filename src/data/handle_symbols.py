import click
import emoji
import pandas as pd
import re
from typing import Optional


def handle_unk_tokens(text: str) -> str:
    """Replaces '‚ÇΩ' with '—Ä' and removes unknown symbols

    Parameters
    ----------
    text : str

    Returns
    -------
    str
    """
    rub_token = re.compile("‚ÇΩ")
    unk_tokens = re.compile(
        "["
        "ÿÆÂª∂Á≠æ¬¥Â∫ßÈäÄùê´ÊåáÊàêÈáë’£‘ºÂàÜ‚óï‚Ç∫ùëÖ„Å•‰∏≠‚ÅÑÊÅ®‡ºéÊÅØ‚â™„ÅÇ’Ü‚ë£Âæê‚úØ‰∏ãÂá§ÂèÉ‚àó‰øÑÔ∏µÊÉÖ‚Çπ‚ÄªÁ±ç€∂ÂõΩ·Éóùêì‚àö“ë¬¶œÄ"
        "Âê¶ÿ™ÔºÖ‚úøËôïÎÖïÂïÜÁªô‘∏Ê±Ç‚àºÂäõÂòòÁßÄÈÄÄ‚öàÂè£‚Ä∞‰ªò¬πËÅî¬™ËØ¥‚Öö¬•‚Å∏Ôºõ·É°ËØÅÈó¥‰Ωè‚àÜ‚ñâ‚Å∂‚ïØÊî∂‚ó†’ä‰ºö◊£‚äôùóà‚òÜ"
        "ùóÇÂÆ∂ÿ©ùóá‚à©Â∞èËæΩ‚ôßÿå·É§È™å‚ñÇ·¥•’©Â∑•Àô‚å£Êñô¬ø‰∏ìÊñáÊªôÂáÄ„Å®‚â´“±ÂùáÁ†Å„ÅæÌïò‘±‚òüÊÇ®„Å´Ë¶Å ñùüî„ÄäÂ•Ω„ÄíËôü‚Å¥ÂüéË≤°„ÉÖ"
        "‚ëÖËÄÉÔºçÁï™Ôºã‚Öî·¥ÑƒêÏïàÿµËØùÏõî‚ë§Ê£Ä„ÇìÈü©ÈªÑÈûç‡ºöÔºùË°ó‚Öò‚ãÖÁúã‚ï≠÷â‚óçÂú∞‰∫ëË≤ª◊ó‰∏ö„Äã‚ú≤‚ë°Â∑≤Áªìùëπ‚çõ ï’±Ëä±ùêÆ„Ö†’•‚óè"
        "Êãâ ôÊùê·ïó„ÅõÊù∞‚ë•‚ñΩ‚úµ‚ú´¬§Êü•ÂùÄ–äÂÆøÀò’ÆÔººÈîã‡ººÔºäùñΩÂ∏ÇÔºÉùüé‚óù·É£“∂ÿ∫ùñ®ùê≠‚ç∑ÊåÅ—í·ÉòÊ≥ÅÈí±È°çÊúàÂè∏“∑÷É‚Ä§‰ª¨‚òª‚âß"
        "ÈúÄÔºÇ‡ºΩÂÖ¨“óÂçóËµÑÁ±å‚ÑÖùê¢Ë®Ä‰ª•‚ñ¥ÈôÑ·µï„Å™ùüêÈÄºÂéåÍí±’µ“°üñíÊñØ’´„ÅÆÈùíÂèóÊâìÊó•ÂÆâ‚àëÈôàÁî®ÁãÄÂ∑û¬Ø‚ÖìÂÖÉÂΩ©Íùê„©Æ„Äë"
        "Áõä‡∏ø‚Å∞„ÅØÔ∏∂ÔæâË©≥Ïöî◊õÁêÜ‚öÖ‚Ç£’ÑËØ∂◊§„ÉªŸâÿü‚ï≤÷ÑÊïôÂ≥∂œáÂ∑±‚äÇÁΩóÂÆå‚Ç∏„ãõ÷Çùê©Êé•‰ª£ËΩâ‚ï±„Çä‚ñ°Áâπùñº„Åï–Ç·êõ‚óúÂÄ¶ÈÅ∏Êú¨Êù≠"
        "ÈïøÂ±±Â§ñÂàö‘ªÂ≤∏Ë£°‚ë†‚å¢Ë¨ùÊ¢Ö‚Öó‚ó°ùêü·¥ó“†¬¢‚ñîùüëË¢´“ΩÂ∏êÈ´ò“ªËøòÿπÂ≤õË∑Ø„Å§‰æõ‚öòÂêóÔæü‚îê„ÉºÔºÑ‚Ç©Êó∂ËìÑËÉΩËÉú”àÂú®Ôø£Âå∫"
        "Ÿ™ÔºôÊèêÔΩûÏÑ∏‚â¶„Äó‚öÆ‚Ç±‰∫Ü’°‡•§ÁõÆ·ï§Êò•ÀµÁ≥ªÂèØ‡≤∞Êµ∑È°∫‚Öûùë∫‚åíÔΩ•¬°Ê°£ùëÑùñ£·ï¶‚Ä∫◊ßÈæÑùñª‡≥ßÂà∞üñìÿ°Êó∫Ëá™‚óî◊üË¥¶Âì≤“º‚àÖ‚ï•‘ÄÊôö√æ"
        "’êÊâ£ËÅå‘µÂÑ≤ÂÆÅùóÜÔΩÄË≥¨‚Ç¥‚úìùêûŸ©ËâØ’¥‘≤È†Öƒ∏ÊòØ◊öË•øÿ≠È≤ªÁúÅŸÅÂÆ§‚ùØ„Å£ ò„Ö°ùêõ‡∏áÂ≤óË°å·Éî‚†ÄÂΩ°„ÇàÂçé‚îªÂêà‚ò∞‚ë¢Ê≠§ÂêåÊúüËá≥"
        "◊íÂÜú÷Äÿ¨ùñæÊõ¥ùê≤ÁÄöÊ†ãÂÖº„ÉéÁµ¶„Çâ’ÄÂìà·¥ã◊¶Á∑®ùêßÈÇ¶‚¶ÅÂ§öŸÇÊúõ·É†‚àôŸÉÂúã‘π‚Äêùê§‚ó¶Áî±Êâß·ïïÊ•ºÂèë‚â•‚îäÊúâÂåØ‰∏ç“ãÁæÖ◊ò‚öÄÂà™Áªè‚Äí“ô"
        "ùê®‰ªñÂπ¥ÂÜªÁîµ„Äñ‚îàÿ´‚É£ÿ∑ÂèäÂìÅ‚Öï‚îúÿ∞’ìÊú±ÿ¥·É≥‚Åø‚îåùóÖÔºö‚ÄΩÁ§∫‚îÅ‰ΩçÂè∑Âá∞Íí∞ îùñ∫‚ô§ùê¶ÂÖ®Œ∂ÂâçÂÇªÊ≤°„ÖèÂ§ßùóå„ÉÆÂæ∑‚ãÜÔºûÔºé„ÅåÔºè·É¶"
        "„ÄÅÊúÄ◊ñÊâÄ‚Å∑ÈÅã’∂‚ô°Èì∂‚òû‚äÉËñ™‚ñæ’∏„Äê„ÅÜÊîØ‚Çªüñë–è„ÄÉ‚Öù‡∏ñ„ÅÑÁéá‡πÄùóÄ‡∏≤‚ï∞‚ïÆ“•Èô§◊° ú‚Ç™Ê≠êùê†€ÅÈÄôÔø†Êà∑‚Åπ‰∏ä¬∏‚òâÊ∂àÊ¨æÂõû‘øÂºÄ’Ø‡∏•"
        "‚ùõ’Ö‚óãÔΩ°Ôºú’öùêöÂßìË≤∏—õùüè¬æÀñÁß∞Âíã‚ÅµË™û“∫Êà∂ÂêçË±ê·¥Ä“â‚óâÂæûË¥∑’πÂ©∑‡≤†¬∞"
        "]"
    )
    text = rub_token.sub(r"—Ä—É–±", text)
    text = unk_tokens.sub("#", text)
    text = re.sub("#+", "#", text)
    return text


def handle_positive_emojis(text: str) -> str:
    """Replaces positive emojies with `:)` phrase

    Parameters
    ----------
    text : str

    Returns
    -------
    str
    """
    positive_emoji_pattern = re.compile(
        "["
        "\U0000270A-\U0000270B"
        "\U00002728"
        "\U0001F600"
        "\U0001F601-\U0001F606"
        "\U0001F607-\U0001F608"
        "\U0001F609-\U0001F60D"
        "\U0001F60E-\U0001F60F"
        "\U0001F617-\U0001F61C"
        "\U0001F638-\U0001F639"
        "\U0001F917-\U0001F918"
        "\U0001F913"
        "\U0001F919-\U0001F91A"
        "\U0001F91D"
        "\U0001F91F"
        "\U0001F923"
        "\U0001F44D"
        "]",
        flags=re.UNICODE,
    )
    text = positive_emoji_pattern.sub(r" :) ", text)
    return text


def handle_negative_emojis(text: str) -> str:
    """Replaces negative emojies with `:(` phrase

    Parameters
    ----------
    text : str

    Returns
    -------
    str
    """
    negative_emoji_pattern = re.compile(
        "["
        "\U0001F610-\U0001F616"
        "\U0001F61D-\U0001F633"
        "\U0001F635-\U0001F636"
        "\U0001F637"
        "\U0001F640"
        "\U0001F641-\U0001F644"
        "\U0001F914-\U0001F915"
        "\U0001F910"
        "\U0001F912"
        "\U0001F922"
        "\U0001F924-\U0001F92F"
        "\U0001F44E"
        "\U0001F4A9"
        "ü§¶üèª"
        "]",
        flags=re.UNICODE,
    )
    text = negative_emoji_pattern.sub(r" :( ", text)
    return text


def handle_smiles(text: str) -> str:
    """Unify smiles by replacing them with `:)` and `:(` phrases

    Parameters
    ----------
    text : str

    Returns
    -------
    str
    """

    # Smile -- :), : ), :-), (:, ( :, (-:, :')
    text = re.sub(r"(:\s?\)|:-\)|\(\s?:|\(-:|:\'\))", " :) ", text)

    # Laugh -- :D, : D, :-D, xD, x-D, XD, X-D
    text = re.sub(r"(:\s?3|:\s?D|:-D|x-?D|X-?D)", " :) ", text)

    # # Love -- <3, :*, —Ç¬ô–Ö, ^^, ^_^
    # text = re.sub(r'(<3|:\*|—Ç¬ô–Ö|^\s?^)', ' :) ', text)

    # Wink -- ;-), ;), ;-D, ;D, (;,  (-;
    text = re.sub(r"(;-?\)|;-?D|\(-?;)", " :) ", text)

    # Sad -- :-(, : (, :(, ):, )-:
    text = re.sub(r"(:\s?\(|:-\(|\)\s?:|\)-:)", " :( ", text)

    # Cry -- :,(, :'(, :"(, ;(, );
    text = re.sub(r'(:,\(|:\'\(|:"\()|;\s?\(|\(\s?;', " :( ", text)

    return text


def handle(text: str, do_sentiment: Optional[bool] = True) -> str:
    """Unify smiles and emojies by replacing them with `:)`
    and `:(` or `–±¬ç–∞–ú–∞–û–∞–î–∞–ñ–∞–ò` phrases

    Parameters
    ----------
    text : str
    do_sentiment : Optional[bool], optional
        defines the need to devide emojies into positive
        and negative, by default False

    Returns
    -------
    str
    """
    text = handle_unk_tokens(text)
    if do_sentiment:
        text = handle_positive_emojis(text)
        text = handle_negative_emojis(text)
        text = handle_smiles(text)

    emoji_pattern = emoji.get_emoji_regexp()
    text = emoji_pattern.sub(r" ", text)
    text = re.sub(r" +", r" ", text)
    return text


@click.command()
@click.argument("input_path", type=click.Path())
@click.argument("output_path", type=click.Path())
def handle_df(input_path: str, output_path: str):
    df = pd.read_csv(input_path)
    df["text"] = df.text.apply(handle)
    df.to_csv(output_path, index=None)


if __name__ == "__main__":
    handle_df()
